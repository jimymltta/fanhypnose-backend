/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsDate,
  ValidateNested,
  IsBoolean,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { FactureCreateNestedManyWithoutConsultantsInput } from "./FactureCreateNestedManyWithoutConsultantsInput";
import { ScriptCreateNestedManyWithoutConsultantsInput } from "./ScriptCreateNestedManyWithoutConsultantsInput";
import { EnumConsultantWhyTheyCome } from "./EnumConsultantWhyTheyCome";
@InputType()
class ConsultantCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  birthDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  channel?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: () => FactureCreateNestedManyWithoutConsultantsInput,
  })
  @ValidateNested()
  @Type(() => FactureCreateNestedManyWithoutConsultantsInput)
  @IsOptional()
  @Field(() => FactureCreateNestedManyWithoutConsultantsInput, {
    nullable: true,
  })
  factures?: FactureCreateNestedManyWithoutConsultantsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  firstName!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  job?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  kids?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  married?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
    type: () => ScriptCreateNestedManyWithoutConsultantsInput,
  })
  @ValidateNested()
  @Type(() => ScriptCreateNestedManyWithoutConsultantsInput)
  @IsOptional()
  @Field(() => ScriptCreateNestedManyWithoutConsultantsInput, {
    nullable: true,
  })
  scripts?: ScriptCreateNestedManyWithoutConsultantsInput;

  @ApiProperty({
    required: false,
    enum: EnumConsultantWhyTheyCome,
  })
  @IsEnum(EnumConsultantWhyTheyCome)
  @IsOptional()
  @Field(() => EnumConsultantWhyTheyCome, {
    nullable: true,
  })
  whyTheyCome?:
    | "HypnoRelaxation"
    | "LiberationEmotionnelle"
    | "DeveloppementPersonnel"
    | "Tabac"
    | "Addiction"
    | "Douleur"
    | "TroubleSexuel"
    | "Enfant"
    | "PerformanceSportive"
    | "TroubleAlimentaire"
    | null;
}
export { ConsultantCreateInput };
